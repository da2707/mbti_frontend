[{"/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/index.js":"1","/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/App.js":"2","/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/reportWebVitals.js":"3","/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/page/Start.js":"4","/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/page/Result.js":"5","/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/page/SelectGender.js":"6","/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/page/Question.js":"7","/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/page/ResultShare.js":"8","/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/page/MoreShare.js":"9","/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/page/More.js":"10"},{"size":627,"mtime":1623337450781,"results":"11","hashOfConfig":"12"},{"size":2421,"mtime":1623337450700,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1623337450785,"results":"14","hashOfConfig":"12"},{"size":2179,"mtime":1623337450784,"results":"15","hashOfConfig":"12"},{"size":7709,"mtime":1623337450784,"results":"16","hashOfConfig":"12"},{"size":3680,"mtime":1623337450784,"results":"17","hashOfConfig":"12"},{"size":4387,"mtime":1623337450783,"results":"18","hashOfConfig":"12"},{"size":7559,"mtime":1623337450784,"results":"19","hashOfConfig":"12"},{"size":6045,"mtime":1623337450783,"results":"20","hashOfConfig":"12"},{"size":6561,"mtime":1623337450783,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"45rqjb",{"filePath":"25","messages":"26","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":8,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/index.js",["51"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport Start from './page/Start';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/App.js",["52","53","54","55","56","57","58","59","60","61","62","63"],"import React, { createContext, useState, useRef } from 'react'; \nimport { useMediaQuery } from 'react-responsive';\nimport { Link, Route, BrowserRouter as Router } from 'react-router-dom';\nimport logo from './logo.svg';\nimport start from './img/start.png';\nimport startMb from './img/startMb.png';\nimport headMb from './img/headMb.png';\nimport bgPc from './img/bgPc.png';\nimport bgTb from './img/bgTb.svg';\nimport bgMb from './img/bgMb.svg';\nimport './App.css';\nimport SelectGender from './page/SelectGender';\nimport Start from './page/Start';\nimport Question from './page/Question';\nimport Result from './page/Result';\nimport More from './page/More';\nimport ResultShare from './page/ResultShare';\nimport MoreShare from './page/MoreShare';\n\n\n\nfunction App () {\n\nconst TestContext = createContext({       \n  \"gender\" : \"\",\n  \"user_answer\" : [ \n    {\"question_idx\" : 1,\n     \"answer_idx\" : \"\" },\n    {\"question_idx\" : 2,\n     \"answer_idx\" : \"\" },\n    {\"question_idx\" : 3,\n     \"answer_idx\" : \"\" },\n    {\"question_idx\" : 4,\n     \"answer_idx\" : \"\" },\n    {\"question_idx\" : 5,\n     \"answer_idx\" : \"\" },\n    {\"question_idx\" : 6,\n     \"answer_idx\" : \"\" },\n    {\"question_idx\" : 7,\n     \"answer_idx\" : \"\" },\n    {\"question_idx\" : 8,\n     \"answer_idx\" : \"\" },\n    {\"question_idx\" : 9,\n     \"answer_idx\" : \"\" },\n    {\"question_idx\" : 10,\n     \"answer_idx\" : \"\" },\n    {\"question_idx\" : 11,\n     \"answer_idx\" : \"\" },\n    {\"question_idx\" : 12,\n     \"answer_idx\" : \"\" },\n    ]});\n\nconst[test,setTest] = useState({\ngender: \"\",\nmatch_type: \"\",\nmbti_id: \"\",\nmy_type: \"\",\nmy_type_match_img_url: \"\",\nmy_type_match_item_1: \"\",\nmy_type_match_item_2: \"\",\nmy_type_match_same_gender_item_1: \"\",\nmy_type_match_same_gender_item_2: \"\",\nmy_type_match_same_img_url: \"\",\nmy_type_rep_img_url: \"\",\nmy_type_rep_item_1: \"\",\nmy_type_rep_item_2: \"\"\n});\n\n\n\n\nreturn (\n      <Router>\n        <header>\n          \n        </header>\n        <main>\n          <Route exact path=\"/\" component={Start} />\n          <Route path=\"/SelectGender\" component={SelectGender} />\n          <Route path=\"/Question\" component={Question} setTest={setTest}/>\n          <Route path=\"/Result\" component={Result} />\n          <Route path=\"/More\" component={More} />\n          <Route path=\"/ResultShare/:gender/:mbti\" component={ResultShare} />\n          <Route path=\"/MoreShare/:gender/:mbti\" component={MoreShare} />\n\n        </main>\n      </Router>\n    );\n  }\n\nexport default App;\n","/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/reportWebVitals.js",[],"/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/page/Start.js",["64","65","66","67","68","69","70","71","72","73","74"],"import React, { useState, useEffect } from 'react'; \nimport { useMediaQuery } from 'react-responsive';\nimport { useLocation, Link, Route, BrowserRouter as Router } from 'react-router-dom';\nimport logo from '../logo.svg';\nimport start from '../img/start.png';\nimport startMb from '../img/startMb.png';\nimport headMb from '../img/headMb.png';\nimport bgPc from '../img/bgPc.png';\nimport bgTb from '../img/bgTb.svg';\nimport bgMb from '../img/bgMb.svg';\nimport '../App.css';\nimport SelectGender from './SelectGender';\n\n\nfunction Start () {\n\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n    const isPc = useMediaQuery({\n      query : \"(min-width:1024px)\"\n    });\n    const isTablet = useMediaQuery({\n      query : \"(min-width:768px) and (max-width:1023px)\"\n    });\n    const isMobile = useMediaQuery({\n      query : \"(max-width:767px)\"\n    });\n\n    return (\n      <div className=\"App\">\n        \n         {/* <header className=\"App-header\">\n          <img src={bgPc} className=\"App-logo\" alt=\"logo\" />\n        </header>  */}\n        {/* <div> */}\n\n          {/* {isPc && <p>HI PC</p>}\n          {isTablet && <p>HI Tablet</p>}\n          {isMobile && <p>HI Mobile</p>} */}\n          {/* {isPc &&  <img src={bgPc} className=\"App-logo\" alt=\"logo\" />}\n          {isTablet &&  <img src={bgTb} className=\"App-logo\" alt=\"logo\" />}\n          {isMobile &&  <img src={bgMb} className=\"App-logo\" alt=\"logo\" />} */}\n          {isPc &&  \n          <div className=\"bgPc\">\n            <div className=\"sBtn\">\n              <img className=\"start\" src={start}/>\n            </div>\n          </div>}\n          {isTablet &&  <div className=\"bgTb\"></div>}\n          {isMobile &&  \n          <div className=\"bgMb\">\n            <div className=\"dHead\">\n              <img className=\"head\" src={headMb}/>\n            </div>\n            \n            <div className=\"sBtn\">\n            <Link to =\"/SelectGender\">\n              <img className=\"start\" src={startMb}/>\n            </Link>\n            </div>\n          </div>}\n        {/* </div> */}\n        \n        {/* <Route path=\"/gd\" component={gd} /> */}\n      </div>\n    );\n  }\n\nexport default Start;\n","/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/page/Result.js",["75","76","77","78","79","80","81","82","83","84","85"],"import React, { useState, useRef, useEffect } from 'react'; \nimport axios from 'axios';\nimport { useMediaQuery } from 'react-responsive';\nimport { useLocation, Link, Route, BrowserRouter as Router } from 'react-router-dom';\nimport '../App.css';\nimport Avatar from 'react-avatar';\nimport { KakaoLinkDefault, KakaoLinkScrap } from 'react-kakao-link';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nfunction Result () {\n \n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n\nconst url = window.location.href;\n\nconst twitterShare = () => {\n  window.open('https://www.twitter.com/intent/tweet?url='+result+\"/\"+NewTest.gender+\"/\"+NewTest.my_type);\n};\n\n\n\n\n    const location = useLocation();\n    const genderTest = location.state;\n    console.log(\"뭐지뭐지\" + JSON.stringify(genderTest));\n    console.log(genderTest.test);\n\n    let[NewTest, SetNewTest] = useState([]);\n    let[dSex, SetDSex] = useState();\n\n    useEffect(() => {\n      let completed = false;\n      async function fetchData(){\n        await axios.post('http://1.238.222.186:9999/mbti/result?mbti_id=000001', \n        genderTest.test\n        ).then((Response)=>{\n          if(!completed){\n          SetNewTest(Response.data);\n          console.log(\"NewTest :: \" + NewTest);\n          if(NewTest.gender==\"male\"){\n            SetDSex(\"female\");\n            console.log(\"dSex :: \" + dSex);\n          }\n          else{\n            SetDSex(\"male\");\n            console.log(\"dSex :: \" + dSex);\n          }\n        }});\n      }\n\n      fetchData();\n      return () => {\n        completed = true;\n      };\n    },[]);\n\n    const isPc = useMediaQuery({\n        query : \"(min-width:1024px)\"\n      });\n      const isTablet = useMediaQuery({\n        query : \"(min-width:768px) and (max-width:1023px)\"\n      });\n      const isMobile = useMediaQuery({\n        query : \"(max-width:767px)\"\n      });\n\n      let home = \"http://1.238.222.186:9999/mbti\";\n      let end = \"/images/ITZY_yeji.jpeg\";\n\n      let [moreInputData, setInputData] = useState([]);\n\n      let result = \"http://172.30.1.2:3000/ResultShare\";\n\n    return (\n        <div className=\"result\">\n        {isMobile &&  \n          <div className=\"bgMbResult\">\n            <div className=\"avatar\">\n              <Avatar size=\"100\"\n                      round=\"100px\"\n                      \n                      facebook-id=\"invalidfacebookusername\"\n                      src={home + NewTest.my_type_rep_img_url}\n                      /*avatarStyle={{borderWidth:2,borderColor:'white',borderTopLeftRadius: 1, borderStyle:'solid'}}*//>\n            </div>\n            <div className=\"idolName1\">\n              <h1 className=\"fontIdolName1\">{NewTest && NewTest.my_type_rep_item_1} {NewTest && NewTest.my_type_rep_item_2}</h1>\n              <Link to = {{pathname:\"/More\", state:\n              {\n                \"gender\" : NewTest.gender,\n                \"my_type\" : NewTest.my_type}}}>\n              <h1 className=\"moreBtn\">더보기</h1>\n              </Link>\n            </div>\n            <div className=\"blank\"></div>\n            <div className=\"idolMbti\">\n              <h1 className=\"fontIdolMbti\">{NewTest && NewTest.my_type}</h1>\n            </div>\n\n\n\n            <div className=\"chemiTitle1\">\n              <h1 className=\"chemiSameSex\">케미폭발<br/>동성친구</h1>\n              <div className=\"chemiAvatar\">\n              <Avatar size=\"80\"\n                      round=\"100px\"\n                      facebook-id=\"invalidfacebookusername\"\n                      src={home + NewTest.my_type_match_same_img_url}/>\n              </div>\n              <h1 className=\"fontIdolMbti\">{NewTest.my_type_match_same_gender_item_1} {NewTest.my_type_match_same_gender_item_2}</h1>\n              <Link to = {{pathname:\"/More\", state:\n              {\n                \"gender\" : NewTest.gender,\n                \"my_type\" : NewTest.match_type}}}>\n              <h1 className=\"moreBtn\">더보기</h1>\n              </Link>\n            </div>\n\n            <div className=\"chemiTitle2\">\n              <h1 className=\"chemiDSex\">케미폭발<br/>이성친구</h1>\n              <div className=\"chemiAvatar\">\n              <Avatar size=\"80\"\n                      round=\"100px\"\n                      facebook-id=\"invalidfacebookusername\"\n                      src={home + NewTest.my_type_match_img_url}/>\n              </div>\n              <h1 className=\"fontIdolMbti\">{NewTest.my_type_match_item_1} {NewTest.my_type_match_item_2}</h1>\n              {\n                NewTest.gender === \"male\" ? \n                (              <Link to = {{pathname:\"/More\", state:\n                {\n                  \"gender\" : \"female\",\n                  \"my_type\" : NewTest.match_type}}}>\n                <h1 className=\"moreBtn\">더보기</h1>\n                </Link>)\n                : \n                (              <Link to = {{pathname:\"/More\", state:\n                {\n                  \"gender\" : \"male\",\n                  \"my_type\" : NewTest.match_type}}}>\n                <h1 className=\"moreBtn\">더보기</h1>\n                </Link>)\n              }\n\n            </div>\n\n            <div className=\"shareTwitterBtn\" >\n              <h1 className=\"shareTwitter\" onClick={twitterShare}>트위터로 공유하기</h1>\n            </div>\n            <div className=\"shareKakaoBtn\">\n              <KakaoLinkDefault\n              className=\"template\"\n              template={{\n                objectType: \"feed\",\n                content: {\n                  title: NewTest.match_type,\n                  description: \"#케익 #딸기 #삼평동 #카페 #분위기 #소개팅\",\n                  imageUrl:\n                    \"../img/start.png\",\n                  link: {\n                    mobileWebUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.my_type,\n                    webUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.my_type,\n                  },\n                },\n                social: {\n                  likeCount: 286,\n                  commentCount: 45,\n                  sharedCount: 845,\n                },\n                buttons: [\n                  {\n                    title: \"웹으로 보기\",\n                    link: {\n                      mobileWebUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.my_type,\n                      webUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.my_type,\n                    },\n                  },\n                  {\n                    title: \"앱으로 보기\",\n                    link: {\n                      mobileWebUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.my_type,\n                      webUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.my_type,\n                    },\n                  },\n                ],\n              }}\n              jsKey={\"b9fb41bcc6b6ab2dea9c74602d2efcf3\"}\n              >\n              <h1 className=\"shareKakao\">카카오로 공유하기</h1>\n              </KakaoLinkDefault>\n            </div>\n            <div className=\"shareLinkBtn\" onClick={()=>alert(url + \"/\" + NewTest.gender + \"/\" + NewTest.my_type + \"\\n클립보드에 복사되었습니다.\")}>\n            <CopyToClipboard text={url + \"/\" + NewTest.gender + \"/\" + NewTest.my_type} \n                             >\n              <h1 className=\"shareLink\">링크복사</h1>\n            </CopyToClipboard>\n            </div>\n            <div className=\"shareAdBtn\">\n              <h1 className=\"shareAd\">광고</h1>\n            </div>\n            <div className=\"shareReStartBtn\">\n              <Link to =\"/\">\n              <h1 className=\"reStart\">다시 테스트 하기</h1>\n              </Link>\n            </div>\n          </div>}\n      </div>\n    );\n\n}\n\nexport default Result;","/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/page/SelectGender.js",["86","87","88","89","90","91","92","93","94","95","96"],"import React, { useState, useRef, useEffect} from 'react'; \nimport axios from 'axios';\nimport $ from 'jquery';\nimport { useMediaQuery } from 'react-responsive';\nimport { useLocation ,Link, Route, BrowserRouter as Router } from 'react-router-dom';\nimport '../App.css';\nimport wBtnMb from '../img/wBtnMb.png';\nimport mBtnMb from '../img/mBtnMb.png';\n\nlet qs1 = \"\";\n\naxios.get('https://dog.ceo/api/breeds/list/all').then((Response)=>{\n  console.log(Response.data);\n  console.log(Response.data.status);\n  console.log(Response.data.message.bulldog[1]);\n  qs1 = Response.data.message.bulldog[1];\n}).catch((Error)=>{\n  console.log(Error);\n})\n\nfunction SelectGender () {\n  \n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  const [question, setQuestion] = useState();\n\n  const displayStyle = 'display:none';\n\n  const isPc = useMediaQuery({\n    query : \"(min-width:1024px)\"\n  });\n  const isTablet = useMediaQuery({\n    query : \"(min-width:768px) and (max-width:1023px)\"\n  });\n  const isMobile = useMediaQuery({\n    query : \"(max-width:767px)\"\n  });\n\n  const gdRef = useRef(null);\n\n\n\n    return (\n      <div>\n        <div className=\"gd\" ref={gdRef}>\n        {isMobile &&  \n          <div className=\"bgMbGd\">\n            <div className=\"wBtn\">\n              <Link to ={{pathname:\"/Question\",state:{\n    \"gender\" : \"female\",\n    \"user_answer\" : [ \n      {\"question_idx\" : 1,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 2,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 3,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 4,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 5,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 6,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 7,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 8,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 9,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 10,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 11,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 12,\n       \"answer_idx\" : \"\" },\n      ]}}}>\n              <img className=\"start\" src={wBtnMb} />\n              </Link>\n            </div>\n            <div className=\"mBtn\">\n            <Link to ={{pathname:\"/Question\",state:{\n    \"gender\" : \"male\",\n    \"user_answer\" : [ \n      {\"question_idx\" : 1,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 2,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 3,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 4,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 5,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 6,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 7,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 8,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 9,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 10,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 11,\n       \"answer_idx\" : \"\" },\n      {\"question_idx\" : 12,\n       \"answer_idx\" : \"\" },\n      ]}}}>\n              <img className=\"start\" src={mBtnMb}/>\n              </Link>\n            </div>\n          </div>}\n        </div>\n        {/* <div className=\"qs\">\n        {isMobile &&  \n          <div className=\"bgMbQs\">\n            <div className=\"title\">\n              <h1 className=\"font\">Q1.</h1>\n            </div>\n            <div className=\"qs1\">\n              <h2 className=\"font\">문제</h2>\n            </div>\n            <div className=\"as1\">\n              <h1 className=\"font\">{qs1}</h1>\n            </div>\n            <div className=\"as2\">\n              <h1 className=\"font\">안녕안녕</h1>\n            </div>\n          </div>}\n        </div> */}\n      </div>\n    );\n}\n\nexport default SelectGender;","/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/page/Question.js",["97","98","99","100","101","102","103","104","105","106","107"],"import React, { useState, useEffect } from 'react'; \nimport axios from 'axios';\nimport { useMediaQuery } from 'react-responsive';\nimport { useLocation, Link, Route, BrowserRouter as Router } from 'react-router-dom';\nimport '../App.css';\nimport wBtnMb from '../img/wBtnMb.png';\nimport mBtnMb from '../img/mBtnMb.png';\n\nfunction Question () {\n\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  const location = useLocation();\n  const genderTest = location.state;\n  console.log(\"뭐지\" + JSON.stringify(genderTest));\n\n\n\n  const isPc = useMediaQuery({\n    query : \"(min-width:1024px)\"\n  });\n  const isTablet = useMediaQuery({\n    query : \"(min-width:768px) and (max-width:1023px)\"\n  });\n  const isMobile = useMediaQuery({\n    query : \"(max-width:767px)\"\n  });\n\n  let [Qnumber, NewQnumber] = useState(['Q1.','Q2.','Q3.','Q4.','Q5.','Q6.','Q7.','Q8.','Q9.','Q10.','Q11.','Q12.']);\n\n  const [Question, NewQuestion] = useState([]);\n  let [Answer, NewAnswer] = useState([]);\n  let [Number, NextNumber] = useState(0);\n  let i = 0;\n  \n  let [answerData, setAnswerData] = useState([]);\n  useEffect(() => {\n    let completed = false;\n    async function fetchData(){\n\n    if(!completed) {\n      setAnswerData(genderTest);\n      }\n    }\n    fetchData();\n    return () => {\n      completed = true;\n    };\n  },[]);\n  \n  useEffect(() => {\n    let completed = false;\n    async function fetchData(){\n      const result = await axios.get('http://1.238.222.186:9999/mbti/query/quest?mbti_id=000001');\n      console.log(result.data.quest_list);\n    if(!completed) {\n      NewQuestion(result.data);\n      NewAnswer(result.data);\n      }\n    }\n    fetchData();\n    return () => {\n      completed = true;\n    };\n  },[]);\n  \n  \n  function PostAnswerA() {\n    let newAnswer = {...answerData};\n    newAnswer.user_answer[Number].answer_idx = \"A\";\n    setAnswerData(newAnswer);\n    console.log(answerData);\n\n}\n\n  function PostAnswerB() {\n    let newAnswer = {...answerData};\n    newAnswer.user_answer[Number].answer_idx = \"B\";\n    setAnswerData(newAnswer);    \n\n  }\n\n\n\n  function NextAnswerA () {\n\n    let newAnswer = {...answerData};\n    newAnswer.user_answer[Number].answer_idx = \"A\";\n    setAnswerData(newAnswer);\n    NextNumber(Number + 1);\n  }\n  \n  function NextAnswerB () {\n    let newAnswer = {...answerData};\n    newAnswer.user_answer[Number].answer_idx = \"B\";\n    setAnswerData(newAnswer);\n    NextNumber(Number + 1);\n  }\n\n  function DefaultAs1Btn() {\n    return(\n      <h1 className=\"fontAs\" onClick={NextAnswerA}>\n        {Answer.quest_list && Answer.quest_list[Number].answer_list[0].answer_dtl}\n      </h1>\n      \n    );\n  }\n\n  function NextAs1Btn() {\n    return(\n      <Link to = {{pathname:\"/Result\",state:\n      {test:answerData}}}>\n        <h1 className=\"fontAs\" onClick={PostAnswerA}>\n          {Answer.quest_list && Answer.quest_list[Number].answer_list[0].answer_dtl}\n        </h1>\n      </Link>\n    );\n  }\n\n  function SetAs1Btn() {\n    if(Number == 11){\n      return <NextAs1Btn></NextAs1Btn>;\n    }\n    else{\n      return <DefaultAs1Btn></DefaultAs1Btn>;\n    }\n  }\n\n\n\n  function DefaultAs2Btn() {\n    return(\n      <h1 className=\"fontAs\" onClick={NextAnswerB}>\n        {Answer.quest_list && Answer.quest_list[Number].answer_list[1].answer_dtl}\n      </h1>\n    );\n  }\n\n  function NextAs2Btn() {\n    return(\n      <Link to = {{pathname:\"/Result\",state:\n      {test:answerData}}}>\n        <h1 className=\"fontAs\" onClick={PostAnswerB}>\n          {Answer.quest_list && Answer.quest_list[Number].answer_list[1].answer_dtl}\n        </h1>\n      </Link>\n    );\n  }\n\n  function SetAs2Btn() {\n    if(Number == 11){\n      return <NextAs2Btn></NextAs2Btn>;\n    }\n    else{\n      return <DefaultAs2Btn></DefaultAs2Btn>;\n    }\n  }\n\n    return (\n      <div className=\"qs\">\n        {isMobile && \n          <div className=\"bgMbQs\">\n            <div className=\"title\">\n              <h1 className=\"fontTitle\">{Qnumber[Number]}</h1>\n            </div>\n            <div className=\"qs1\">\n              <h1 className=\"fontQs\">{Question.quest_list && Question.quest_list[Number].quest_dtl}</h1>\n            </div>\n            <div className=\"as1\">\n              <SetAs1Btn></SetAs1Btn>\n            </div>\n            <div className=\"as2\">\n              <SetAs2Btn></SetAs2Btn>\n            </div>\n          </div>}\n      </div>\n    );\n\n}\n\nexport default Question;","/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/page/ResultShare.js",["108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"import React, { useState, useRef, useEffect } from 'react'; \nimport axios from 'axios';\nimport { useMediaQuery } from 'react-responsive';\nimport { useLocation, Link, Route, BrowserRouter as Router } from 'react-router-dom';\nimport '../App.css';\nimport Avatar from 'react-avatar';\nimport { KakaoLinkDefault, KakaoLinkScrap } from 'react-kakao-link';\n\nfunction ResultShare ({match}) {\n \n\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n\n\n   //const params = this.props.match;\n   console.log(\"params :: \" + match.params.gender);\n\n   const setMetaTags = ({ title=\"기본 타이틀\", description=\"기본 설명\", imageUrl=\"기본 사이트 이미지 경로\" }) => {\n  //set title \n  document .querySelector('meta[property=\"og:title\"]') .setAttribute(\"content\", `${title}`); \n  //set description \n  document .querySelector('meta[property=\"og:description\"]') .setAttribute(\"content\", description); \n  //set images \n  document .querySelector('meta[property=\"og:image\"]') .setAttribute(\"content\", imageUrl); \n  //set url \n  document .querySelector('meta[property=\"og:url\"]') .setAttribute(\"content\", window.location.href); };\n\n  useEffect(() => {\n    setMetaTags({\n      title:\"test\",\n      description:\"testd\",\n      imageUrl:\"\"\n    });\n  });\n\n\n/*\n    const location = useLocation();\n    const genderTest = location.state;\n    console.log(\"뭐지뭐지\" + JSON.stringify(genderTest));\n    console.log(genderTest.test);\n*/\n    let[NewTest, SetNewTest] = useState([]);\n    let[dSex, SetDSex] = useState();\n\n    useEffect(() => {\n      let completed = false;\n      async function fetchData(){\n        const resultShare = await axios.get('http://1.238.222.186:9999/mbti/query/result?mbti_id=000001&gender='+match.params.gender+'&mbti_type='+match.params.mbti\n        );\n        console.log(resultShare.data);\n          if(!completed){\n          SetNewTest(resultShare.data);\n          console.log(\"NewTest :: \" + NewTest);\n          if(NewTest.gender==\"male\"){\n            SetDSex(\"female\");\n            console.log(\"dSex :: \" + dSex);\n          }\n          else{\n            SetDSex(\"male\");\n            console.log(\"dSex :: \" + dSex);\n          }\n        }\n      }\n\n      fetchData();\n      return () => {\n        completed = true;\n      };\n    },[]);\n\n    const isPc = useMediaQuery({\n        query : \"(min-width:1024px)\"\n      });\n      const isTablet = useMediaQuery({\n        query : \"(min-width:768px) and (max-width:1023px)\"\n      });\n      const isMobile = useMediaQuery({\n        query : \"(max-width:767px)\"\n      });\n\n      let home = \"http://1.238.222.186:9999/mbti\";\n      let end = \"/images/ITZY_yeji.jpeg\";\n\n      let [moreInputData, setInputData] = useState([]);\n\n      let result = \"http://192.168.1.180:3000/ResultShare\";\n\n    return (\n        <div className=\"result\">\n        {isMobile &&  \n          <div className=\"bgMbResult\">\n            <div className=\"avatar\">\n              <Avatar size=\"100\"\n                      round=\"100px\"\n                      facebook-id=\"invalidfacebookusername\"\n                      src={home + NewTest.my_type_rep_img_url}/>\n            </div>\n            <div className=\"idolName1\">\n              <h1 className=\"fontIdolName1\">{NewTest && NewTest.my_type_rep_item_1} {NewTest && NewTest.my_type_rep_item_2}</h1>\n            </div>\n            <div className=\"idolMbti\">\n              <h1 className=\"fontIdolMbti\">{NewTest && NewTest.my_type}</h1>\n            </div>\n\n\n\n            <div className=\"chemiTitle1\">\n              <h1 className=\"fontIdolMbti\">케미폭발<br/>동성친구</h1>\n              <Avatar size=\"80\"\n                      round=\"100px\"\n                      facebook-id=\"invalidfacebookusername\"\n                      src={home + NewTest.my_type_match_same_img_url}/>\n              <h1 className=\"fontIdolMbti\">{NewTest.my_type_match_same_gender_item_1} {NewTest.my_type_match_same_gender_item_2}</h1>\n              <Link to = {{pathname:\"/More\", state:\n              {\n                \"gender\" : NewTest.gender,\n                \"my_type\" : NewTest.match_type}}}>\n              <h1 className=\"moreBtn\">더보기</h1>\n              </Link>\n            </div>\n\n            <div className=\"chemiTitle2\">\n              <h1 className=\"fontIdolMbti\">케미폭발<br/>이성친구</h1>\n              <Avatar size=\"80\"\n                      round=\"100px\"\n                      facebook-id=\"invalidfacebookusername\"\n                      src={home + NewTest.my_type_match_img_url}/>\n              <h1 className=\"fontIdolMbti\">{NewTest.my_type_match_item_1} {NewTest.my_type_match_item_2}</h1>\n              {\n                NewTest.gender === \"male\" ? \n                (              <Link to = {{pathname:\"/More\", state:\n                {\n                  \"gender\" : \"female\",\n                  \"my_type\" : NewTest.match_type}}}>\n                <h1 className=\"moreBtn\">더보기</h1>\n                </Link>)\n                : \n                (              <Link to = {{pathname:\"/More\", state:\n                {\n                  \"gender\" : \"male\",\n                  \"my_type\" : NewTest.match_type}}}>\n                <h1 className=\"moreBtn\">더보기</h1>\n                </Link>)\n              }\n\n\n\n            </div>\n\n            <div className=\"shareTwitterBtn\">\n              <h1 className=\"shareTwitter\">트위터로 공유하기</h1>\n            </div>\n            <div className=\"shareKakaoBtn\">\n            <KakaoLinkDefault\n              className=\"template\"\n              template={{\n                objectType: \"feed\",\n                content: {\n                  title: NewTest.match_type,\n                  description: \"#케익 #딸기 #삼평동 #카페 #분위기 #소개팅\",\n                  imageUrl:\n                    \"../img/start.png\",\n                  link: {\n                    mobileWebUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.match_type,\n                    webUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.match_type,\n                  },\n                },\n                social: {\n                  likeCount: 286,\n                  commentCount: 45,\n                  sharedCount: 845,\n                },\n                buttons: [\n                  {\n                    title: \"웹으로 보기\",\n                    link: {\n                      mobileWebUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.match_type,\n                      webUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.match_type,\n                    },\n                  },\n                  {\n                    title: \"앱으로 보기\",\n                    link: {\n                      mobileWebUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.match_type,\n                      webUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.match_type,\n                    },\n                  },\n                ],\n              }}\n              jsKey={\"b9fb41bcc6b6ab2dea9c74602d2efcf3\"}\n              >\n              <h1 className=\"shareKakao\">카카오로 공유하기</h1>\n              </KakaoLinkDefault>\n            </div>\n            <div className=\"shareLinkBtn\">\n              <h1 className=\"shareLink\">링크복사</h1>\n            </div>\n            <div className=\"shareAdBtn\">\n              <h1 className=\"shareAd\">광고</h1>\n            </div>\n            <div className=\"shareReStartBtn\">\n            <Link to =\"/\">\n              <h1 className=\"reStart\">다시 테스트 하기</h1>\n            </Link>\n            </div>\n           </div>}\n      </div>\n    );\n\n}\n\nexport default ResultShare;","/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/page/MoreShare.js",["127","128","129","130","131","132"],"import React, { useState, useEffect } from 'react'; \nimport axios from 'axios';\nimport { useMediaQuery } from 'react-responsive';\nimport { useLocation, Link, Route, BrowserRouter as Router } from 'react-router-dom';\nimport '../App.css';\nimport Avatar from 'react-avatar';\n\nfunction MoreShare ({match}) {\n\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n\n  const location = useLocation();\n  const moreInputData = location.state;\n  console.log(\"더보기로 넘어온 데이터 :: \" + JSON.stringify(moreInputData));    \n\n  const [details, setDetails] = useState(null);\n  \n  const getUserGeolocationDetails = (e,name) => {\n    \n    let completed = false;\n    async function fetchData(){\n      await axios.post('https://geolocation-db.com/json/0f761a30-fe14-11e9-b59f-e53803842572')\n      .then((response)=>{\n      if(!completed){\n        \n        console.log(\"name :: \" + JSON.stringify(name));\n        console.log(\"name.item1 :: \" + name.name.item_1);\n        \n        const Share = {\n          mbti_id : \"000001\",\n          item_1 : name.name.item_1,\n          item_2 : name.name.item_2,\n          type : \"like\",\n          ip_addr : response.data.IPv4,\n          mbti_type : moreInputData.my_type,\n          gender : moreInputData.gender\n        };\n\n        console.log(\"share \" + JSON.stringify(Share));\n        \n        axios.post('http://1.238.222.186:9999/mbti/share',\n        Share\n        ).then((response)=>{\n          console.log(\"share \" + JSON.stringify(Share));\n          console.log(response);\n        });\n\n        setDetails(response.data);  \n        console.log(response.data);\n        //console.log(\"geoLoc :: \" + JSON.stringify(details));\n        //console.log(\"IPv4 :: \" + details.IPv4);\n         }\n      });\n    }\n    fetchData();\n    return () =>{\n      completed = true;\n    };\n\n  };  \n\n      const isPc = useMediaQuery({\n        query : \"(min-width:1024px)\"\n      });\n      const isTablet = useMediaQuery({\n        query : \"(min-width:768px) and (max-width:1023px)\"\n      });\n      const isMobile = useMediaQuery({\n        query : \"(max-width:767px)\"\n      });\n      \n      const [testData, setTestData] = useState([]);\n      useEffect(() => {\n        let completed = false;\n        async function fetchData(){\n          const result = await axios.get('http://1.238.222.186:9999/mbti/query/similar?mbti_id=000001&mbti_type='+match.params.mbti+'&gender='+match.params.gender);\n          console.log(result.data);\n        if(!completed) setTestData(result.data);\n        }\n        fetchData();\n        return () => {\n          completed = true;\n        };\n      },[]);\n\n      let home = \"http://1.238.222.186:9999/mbti\";\n      \n      const nameList = testData.similarRanking && testData.similarRanking.map(name => \n      <div className=\"more\">\n        <h1 className=\"moreNumber\">{name.rank}</h1>\n        <div className=\"moreAvatar\">\n          <Avatar size=\"70\"\n                  round=\"100px\"\n                  facebook-id=\"invalidfacebookusername\"\n                  src={home + name.img_url}/>\n        </div>\n        <div className=\"moreText\">\n          <h1 className=\"moreIdolName\">{name.item_1} {name.item_2}</h1>\n          <h1 className=\"moreLike\" onClick={(e) => {getUserGeolocationDetails(e,{name})}}>❤ 좋아요 {name.like}개</h1>\n          {/*<h1 className=\"moreShare\">💌 공유하기 {name.shared}회</h1>*/}\n        </div>  \n      </div>\n      );\n      \n      \n\n    return (\n        <div className=\"result\">\n        {isMobile &&  \n          <div className=\"bgMbMore\">\n            <h1 className=\"moreTitle\">나와 어울리는 아이돌은</h1>\n            <h1 className=\"moreCount\">{testData.similar_count}명 입니다.</h1>\n            {nameList}\n            <div className=\"shareTwitterBtn\">\n              <h1 className=\"shareTwitter\">트위터로 공유하기</h1>\n            </div>\n            <div className=\"shareKakaoBtn\">\n            {/*<KakaoLinkDefault\n              className=\"template\"\n              template={{\n                objectType: \"feed\",\n                content: {\n                  title: NewTest.match_type,\n                  description: \"#케익 #딸기 #삼평동 #카페 #분위기 #소개팅\",\n                  imageUrl:\n                    \"../img/start.png\",\n                  link: {\n                    mobileWebUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.my_type,\n                    webUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.my_type,\n                  },\n                },\n                social: {\n                  likeCount: 286,\n                  commentCount: 45,\n                  sharedCount: 845,\n                },\n                buttons: [\n                  {\n                    title: \"웹으로 보기\",\n                    link: {\n                      mobileWebUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.my_type,\n                      webUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.my_type,\n                    },\n                  },\n                  {\n                    title: \"앱으로 보기\",\n                    link: {\n                      mobileWebUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.my_type,\n                      webUrl: result + \"/\" + NewTest.gender + \"/\" + NewTest.my_type,\n                    },\n                  },\n                ],\n              }}\n              jsKey={\"b9fb41bcc6b6ab2dea9c74602d2efcf3\"}\n              >\n              <h1 className=\"shareKakao\">카카오로 공유하기</h1>\n            </KakaoLinkDefault>*/}\n            </div>\n            <div className=\"shareLinkBtn\">\n              <h1 className=\"shareLink\">링크복사</h1>\n            </div>\n            <div className=\"shareAdBtn\">\n              <h1 className=\"shareAd\">광고</h1>\n            </div>\n            <div className=\"shareReStartBtn\">\n              <Link to =\"/\">\n              <h1 className=\"reStart\">다시 테스트 하기</h1>\n              </Link>\n            </div>\n          </div>}\n      </div>\n    );\n\n}\n\nexport default MoreShare;","/Users/hyyyyjin/Documents/GitHub/mbti_frontend/src/page/More.js",["133","134","135","136","137","138","139","140"],"import React, { useState, useEffect } from 'react'; \nimport axios from 'axios';\nimport { useMediaQuery } from 'react-responsive';\nimport { useLocation, Link, Route, BrowserRouter as Router } from 'react-router-dom';\nimport '../App.css';\nimport Avatar from 'react-avatar';\nimport { KakaoLinkDefault, KakaoLinkScrap } from 'react-kakao-link';\n\nfunction More () {\n\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n\n  const location = useLocation();\n  const moreInputData = location.state;\n  console.log(\"더보기로 넘어온 데이터 :: \" + JSON.stringify(moreInputData));    \n\n  const [details, setDetails] = useState(null);\n  \n  const [Harts, SetHarts] = useState(\"🤍\");\n  const [HartFlag, SetHartFlag] = useState(0);\n  const getUserGeolocationDetails = (e,name) => {\n    if(HartFlag == 0){\n      SetHartFlag(1);\n      SetHarts(\"❤\");\n    }\n    else{\n      SetHartFlag(0);\n      SetHarts(\"🤍\");\n    }\n    let completed = false;\n    async function fetchData(){\n      await axios.post('https://geolocation-db.com/json/0f761a30-fe14-11e9-b59f-e53803842572')\n      .then((response)=>{\n      if(!completed){\n        \n        console.log(\"name :: \" + JSON.stringify(name));\n        console.log(\"name.item1 :: \" + name.name.item_1);\n        \n        const Share = {\n          mbti_id : \"000001\",\n          item_1 : name.name.item_1,\n          item_2 : name.name.item_2,\n          type : \"like\",\n          ip_addr : response.data.IPv4,\n          mbti_type : moreInputData.my_type,\n          gender : moreInputData.gender\n        };\n        \n        console.log(\"share \" + JSON.stringify(Share));\n        \n        axios.post('http://1.238.222.186:9999/mbti/share',\n        Share\n        ).then((response)=>{\n          console.log(\"share \" + JSON.stringify(Share));\n          console.log(response);\n        });\n\n        setDetails(response.data);  \n        console.log(response.data);\n        //console.log(\"geoLoc :: \" + JSON.stringify(details));\n        //console.log(\"IPv4 :: \" + details.IPv4);\n         }\n      });\n    }\n    fetchData();\n    return () =>{\n      completed = true;\n    };\n\n  };  \n\n      const isPc = useMediaQuery({\n        query : \"(min-width:1024px)\"\n      });\n      const isTablet = useMediaQuery({\n        query : \"(min-width:768px) and (max-width:1023px)\"\n      });\n      const isMobile = useMediaQuery({\n        query : \"(max-width:767px)\"\n      });\n      \n      const [testData, setTestData] = useState([]);\n      useEffect(() => {\n        let completed = false;\n        async function fetchData(){\n          const result = await axios.get('http://1.238.222.186:9999/mbti/query/similar?mbti_id=000001&mbti_type='+moreInputData.my_type+'&gender='+moreInputData.gender);\n          console.log(result.data);\n        if(!completed) setTestData(result.data);\n        }\n        fetchData();\n        return () => {\n          completed = true;\n        };\n      },[]);\n\n      let home = \"http://1.238.222.186:9999/mbti\";\n      let result = \"http://192.168.1.180:3000/MoreShare\";\n      const nameList = testData.similarRanking && testData.similarRanking.map(name => \n      <div className=\"more\">\n        <h1 className=\"moreNumber\">{name.rank}</h1>\n        <div className=\"moreAvatar\">\n          <Avatar size=\"70\"\n                  round=\"100px\"\n                  facebook-id=\"invalidfacebookusername\"\n                  src={home + name.img_url}/>\n        </div>\n        <div className=\"moreText\">\n          <h1 className=\"moreIdolName\">{name.item_1} {name.item_2}</h1>\n          <h1 className=\"moreLike\" key={name.item_2}>❤ 좋아요 {name.like}개</h1>\n          {/*<h1 className=\"moreShare\">💌 공유하기 {name.shared}회</h1>*/}\n        </div>\n        <div className=\"hart\">\n          <h1 className=\"\" onClick={(e) => {getUserGeolocationDetails(e,{name})}}>{Harts}</h1>\n        </div>  \n      </div>\n      );\n      \n      \n\n    return (\n        <div className=\"result\">\n        {isMobile &&  \n          <div className=\"bgMbMore\">\n            <h1 className=\"moreTitle\">나와 어울리는 아이돌은</h1>\n            <h1 className=\"moreCount\">{testData.similar_count}명 입니다.</h1>\n            {nameList}\n            <div className=\"shareTwitterBtn\">\n              <h1 className=\"shareTwitter\">트위터로 공유하기</h1>\n            </div>\n            <div className=\"shareKakaoBtn\">\n              <KakaoLinkDefault\n              className=\"template\"\n              template={{\n                objectType: \"feed\",\n                content: {\n                  title: \"아이돌더보기\",\n                  description: \"#케익 #딸기 #삼평동 #카페 #분위기 #소개팅\",\n                  imageUrl:\n                    \"../img/start.png\",\n                  link: {\n                    mobileWebUrl: result + \"/\" + moreInputData.gender + \"/\" + moreInputData.my_type,\n                    webUrl: result + \"/\" + moreInputData.gender + \"/\" + moreInputData.my_type,\n                  },\n                },\n                social: {\n                  likeCount: 286,\n                  commentCount: 45,\n                  sharedCount: 845,\n                },\n                buttons: [\n                  {\n                    title: \"웹으로 보기\",\n                    link: {\n                      mobileWebUrl: result + \"/\" + moreInputData.gender + \"/\" + moreInputData.my_type,\n                      webUrl: result + \"/\" + moreInputData.gender + \"/\" + moreInputData.my_type,\n                    },\n                  },\n                  {\n                    title: \"앱으로 보기\",\n                    link: {\n                      mobileWebUrl: result + \"/\" + moreInputData.gender + \"/\" + moreInputData.my_type,\n                      webUrl: result + \"/\" + moreInputData.gender + \"/\" + moreInputData.my_type,\n                    },\n                  },\n                ],\n              }}\n              jsKey={\"b9fb41bcc6b6ab2dea9c74602d2efcf3\"}\n              >\n              <h1 className=\"shareKakao\">카카오로 공유하기</h1>\n              </KakaoLinkDefault>\n            </div>\n            <div className=\"shareLinkBtn\">\n              <h1 className=\"shareLink\">링크복사</h1>\n            </div>\n            <div className=\"shareAdBtn\">\n              <h1 className=\"shareAd\">광고</h1>\n            </div>\n            <div className=\"shareReStartBtn\">\n              <Link to =\"/\">\n              <h1 className=\"reStart\">다시 테스트 하기</h1>\n              </Link>\n            </div>\n          </div>}\n      </div>\n    );\n\n}\n\nexport default More;",{"ruleId":"141","severity":1,"message":"142","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":13},{"ruleId":"141","severity":1,"message":"145","line":1,"column":42,"nodeType":"143","messageId":"144","endLine":1,"endColumn":48},{"ruleId":"141","severity":1,"message":"146","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":23},{"ruleId":"141","severity":1,"message":"147","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":14},{"ruleId":"141","severity":1,"message":"148","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":12},{"ruleId":"141","severity":1,"message":"149","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":13},{"ruleId":"141","severity":1,"message":"150","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":15},{"ruleId":"141","severity":1,"message":"151","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":14},{"ruleId":"141","severity":1,"message":"152","line":8,"column":8,"nodeType":"143","messageId":"144","endLine":8,"endColumn":12},{"ruleId":"141","severity":1,"message":"153","line":9,"column":8,"nodeType":"143","messageId":"144","endLine":9,"endColumn":12},{"ruleId":"141","severity":1,"message":"154","line":10,"column":8,"nodeType":"143","messageId":"144","endLine":10,"endColumn":12},{"ruleId":"141","severity":1,"message":"155","line":24,"column":7,"nodeType":"143","messageId":"144","endLine":24,"endColumn":18},{"ruleId":"141","severity":1,"message":"156","line":53,"column":7,"nodeType":"143","messageId":"144","endLine":53,"endColumn":11},{"ruleId":"141","severity":1,"message":"157","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"158","line":3,"column":29,"nodeType":"143","messageId":"144","endLine":3,"endColumn":34},{"ruleId":"141","severity":1,"message":"159","line":3,"column":53,"nodeType":"143","messageId":"144","endLine":3,"endColumn":59},{"ruleId":"141","severity":1,"message":"148","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":12},{"ruleId":"141","severity":1,"message":"152","line":8,"column":8,"nodeType":"143","messageId":"144","endLine":8,"endColumn":12},{"ruleId":"141","severity":1,"message":"153","line":9,"column":8,"nodeType":"143","messageId":"144","endLine":9,"endColumn":12},{"ruleId":"141","severity":1,"message":"154","line":10,"column":8,"nodeType":"143","messageId":"144","endLine":10,"endColumn":12},{"ruleId":"141","severity":1,"message":"160","line":12,"column":8,"nodeType":"143","messageId":"144","endLine":12,"endColumn":20},{"ruleId":"161","severity":1,"message":"162","line":50,"column":15,"nodeType":"163","endLine":50,"endColumn":51},{"ruleId":"161","severity":1,"message":"162","line":57,"column":15,"nodeType":"163","endLine":57,"endColumn":51},{"ruleId":"161","severity":1,"message":"162","line":62,"column":15,"nodeType":"163","endLine":62,"endColumn":53},{"ruleId":"141","severity":1,"message":"145","line":1,"column":27,"nodeType":"143","messageId":"144","endLine":1,"endColumn":33},{"ruleId":"141","severity":1,"message":"158","line":4,"column":29,"nodeType":"143","messageId":"144","endLine":4,"endColumn":34},{"ruleId":"141","severity":1,"message":"159","line":4,"column":53,"nodeType":"143","messageId":"144","endLine":4,"endColumn":59},{"ruleId":"141","severity":1,"message":"164","line":7,"column":28,"nodeType":"143","messageId":"144","endLine":7,"endColumn":42},{"ruleId":"165","severity":1,"message":"166","line":45,"column":28,"nodeType":"167","messageId":"168","endLine":45,"endColumn":30},{"ruleId":"169","severity":1,"message":"170","line":60,"column":7,"nodeType":"171","endLine":60,"endColumn":9,"suggestions":"172"},{"ruleId":"141","severity":1,"message":"173","line":62,"column":11,"nodeType":"143","messageId":"144","endLine":62,"endColumn":15},{"ruleId":"141","severity":1,"message":"174","line":65,"column":13,"nodeType":"143","messageId":"144","endLine":65,"endColumn":21},{"ruleId":"141","severity":1,"message":"175","line":73,"column":11,"nodeType":"143","messageId":"144","endLine":73,"endColumn":14},{"ruleId":"141","severity":1,"message":"176","line":75,"column":12,"nodeType":"143","messageId":"144","endLine":75,"endColumn":25},{"ruleId":"141","severity":1,"message":"177","line":75,"column":27,"nodeType":"143","messageId":"144","endLine":75,"endColumn":39},{"ruleId":"141","severity":1,"message":"178","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":9},{"ruleId":"141","severity":1,"message":"158","line":5,"column":29,"nodeType":"143","messageId":"144","endLine":5,"endColumn":34},{"ruleId":"141","severity":1,"message":"159","line":5,"column":53,"nodeType":"143","messageId":"144","endLine":5,"endColumn":59},{"ruleId":"141","severity":1,"message":"179","line":16,"column":3,"nodeType":"143","messageId":"144","endLine":16,"endColumn":6},{"ruleId":"141","severity":1,"message":"180","line":29,"column":10,"nodeType":"143","messageId":"144","endLine":29,"endColumn":18},{"ruleId":"141","severity":1,"message":"181","line":29,"column":20,"nodeType":"143","messageId":"144","endLine":29,"endColumn":31},{"ruleId":"141","severity":1,"message":"182","line":31,"column":9,"nodeType":"143","messageId":"144","endLine":31,"endColumn":21},{"ruleId":"141","severity":1,"message":"173","line":33,"column":9,"nodeType":"143","messageId":"144","endLine":33,"endColumn":13},{"ruleId":"141","severity":1,"message":"174","line":36,"column":9,"nodeType":"143","messageId":"144","endLine":36,"endColumn":17},{"ruleId":"161","severity":1,"message":"162","line":81,"column":15,"nodeType":"163","endLine":81,"endColumn":53},{"ruleId":"161","severity":1,"message":"162","line":113,"column":15,"nodeType":"163","endLine":113,"endColumn":52},{"ruleId":"141","severity":1,"message":"158","line":4,"column":29,"nodeType":"143","messageId":"144","endLine":4,"endColumn":34},{"ruleId":"141","severity":1,"message":"159","line":4,"column":53,"nodeType":"143","messageId":"144","endLine":4,"endColumn":59},{"ruleId":"141","severity":1,"message":"183","line":6,"column":8,"nodeType":"143","messageId":"144","endLine":6,"endColumn":14},{"ruleId":"141","severity":1,"message":"184","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":14},{"ruleId":"141","severity":1,"message":"173","line":23,"column":9,"nodeType":"143","messageId":"144","endLine":23,"endColumn":13},{"ruleId":"141","severity":1,"message":"174","line":26,"column":9,"nodeType":"143","messageId":"144","endLine":26,"endColumn":17},{"ruleId":"141","severity":1,"message":"185","line":33,"column":17,"nodeType":"143","messageId":"144","endLine":33,"endColumn":27},{"ruleId":"141","severity":1,"message":"186","line":38,"column":7,"nodeType":"143","messageId":"144","endLine":38,"endColumn":8},{"ruleId":"169","severity":1,"message":"187","line":53,"column":5,"nodeType":"171","endLine":53,"endColumn":7,"suggestions":"188"},{"ruleId":"165","severity":1,"message":"166","line":125,"column":15,"nodeType":"167","messageId":"168","endLine":125,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":155,"column":15,"nodeType":"167","messageId":"168","endLine":155,"endColumn":17},{"ruleId":"141","severity":1,"message":"145","line":1,"column":27,"nodeType":"143","messageId":"144","endLine":1,"endColumn":33},{"ruleId":"141","severity":1,"message":"158","line":4,"column":29,"nodeType":"143","messageId":"144","endLine":4,"endColumn":34},{"ruleId":"141","severity":1,"message":"159","line":4,"column":53,"nodeType":"143","messageId":"144","endLine":4,"endColumn":59},{"ruleId":"141","severity":1,"message":"164","line":7,"column":28,"nodeType":"143","messageId":"144","endLine":7,"endColumn":42},{"ruleId":"189","severity":1,"message":"190","line":25,"column":3,"nodeType":"191","messageId":"192","endLine":25,"endColumn":69,"fix":"193"},{"ruleId":"189","severity":1,"message":"194","line":25,"column":3,"nodeType":"191","messageId":"192","endLine":25,"endColumn":26,"fix":"195"},{"ruleId":"189","severity":1,"message":"190","line":27,"column":3,"nodeType":"191","messageId":"192","endLine":27,"endColumn":75,"fix":"196"},{"ruleId":"189","severity":1,"message":"194","line":27,"column":3,"nodeType":"191","messageId":"192","endLine":27,"endColumn":26,"fix":"197"},{"ruleId":"189","severity":1,"message":"190","line":29,"column":3,"nodeType":"191","messageId":"192","endLine":29,"endColumn":69,"fix":"198"},{"ruleId":"189","severity":1,"message":"194","line":29,"column":3,"nodeType":"191","messageId":"192","endLine":29,"endColumn":26,"fix":"199"},{"ruleId":"189","severity":1,"message":"190","line":31,"column":3,"nodeType":"191","messageId":"192","endLine":31,"endColumn":67,"fix":"200"},{"ruleId":"189","severity":1,"message":"194","line":31,"column":3,"nodeType":"191","messageId":"192","endLine":31,"endColumn":26,"fix":"201"},{"ruleId":"165","severity":1,"message":"166","line":60,"column":28,"nodeType":"167","messageId":"168","endLine":60,"endColumn":30},{"ruleId":"169","severity":1,"message":"202","line":75,"column":7,"nodeType":"171","endLine":75,"endColumn":9,"suggestions":"203"},{"ruleId":"141","severity":1,"message":"173","line":77,"column":11,"nodeType":"143","messageId":"144","endLine":77,"endColumn":15},{"ruleId":"141","severity":1,"message":"174","line":80,"column":13,"nodeType":"143","messageId":"144","endLine":80,"endColumn":21},{"ruleId":"141","severity":1,"message":"175","line":88,"column":11,"nodeType":"143","messageId":"144","endLine":88,"endColumn":14},{"ruleId":"141","severity":1,"message":"176","line":90,"column":12,"nodeType":"143","messageId":"144","endLine":90,"endColumn":25},{"ruleId":"141","severity":1,"message":"177","line":90,"column":27,"nodeType":"143","messageId":"144","endLine":90,"endColumn":39},{"ruleId":"141","severity":1,"message":"158","line":4,"column":29,"nodeType":"143","messageId":"144","endLine":4,"endColumn":34},{"ruleId":"141","severity":1,"message":"159","line":4,"column":53,"nodeType":"143","messageId":"144","endLine":4,"endColumn":59},{"ruleId":"141","severity":1,"message":"204","line":21,"column":10,"nodeType":"143","messageId":"144","endLine":21,"endColumn":17},{"ruleId":"141","severity":1,"message":"173","line":67,"column":13,"nodeType":"143","messageId":"144","endLine":67,"endColumn":17},{"ruleId":"141","severity":1,"message":"174","line":70,"column":13,"nodeType":"143","messageId":"144","endLine":70,"endColumn":21},{"ruleId":"169","severity":1,"message":"205","line":89,"column":9,"nodeType":"171","endLine":89,"endColumn":11,"suggestions":"206"},{"ruleId":"141","severity":1,"message":"158","line":4,"column":29,"nodeType":"143","messageId":"144","endLine":4,"endColumn":34},{"ruleId":"141","severity":1,"message":"159","line":4,"column":53,"nodeType":"143","messageId":"144","endLine":4,"endColumn":59},{"ruleId":"141","severity":1,"message":"164","line":7,"column":28,"nodeType":"143","messageId":"144","endLine":7,"endColumn":42},{"ruleId":"141","severity":1,"message":"204","line":22,"column":10,"nodeType":"143","messageId":"144","endLine":22,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":27,"column":17,"nodeType":"167","messageId":"168","endLine":27,"endColumn":19},{"ruleId":"141","severity":1,"message":"173","line":77,"column":13,"nodeType":"143","messageId":"144","endLine":77,"endColumn":17},{"ruleId":"141","severity":1,"message":"174","line":80,"column":13,"nodeType":"143","messageId":"144","endLine":80,"endColumn":21},{"ruleId":"169","severity":1,"message":"207","line":99,"column":9,"nodeType":"171","endLine":99,"endColumn":11,"suggestions":"208"},"no-unused-vars","'Start' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useMediaQuery' is defined but never used.","'Link' is defined but never used.","'logo' is defined but never used.","'start' is defined but never used.","'startMb' is defined but never used.","'headMb' is defined but never used.","'bgPc' is defined but never used.","'bgTb' is defined but never used.","'bgMb' is defined but never used.","'TestContext' is assigned a value but never used.","'test' is assigned a value but never used.","'useState' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'SelectGender' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'KakaoLinkScrap' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'NewTest', 'dSex', and 'genderTest.test'. Either include them or remove the dependency array.","ArrayExpression",["209"],"'isPc' is assigned a value but never used.","'isTablet' is assigned a value but never used.","'end' is assigned a value but never used.","'moreInputData' is assigned a value but never used.","'setInputData' is assigned a value but never used.","'$' is defined but never used.","'qs1' is assigned a value but never used.","'question' is assigned a value but never used.","'setQuestion' is assigned a value but never used.","'displayStyle' is assigned a value but never used.","'wBtnMb' is defined but never used.","'mBtnMb' is defined but never used.","'NewQnumber' is assigned a value but never used.","'i' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'genderTest'. Either include it or remove the dependency array.",["210"],"no-whitespace-before-property","Unexpected whitespace before property setAttribute.","MemberExpression","unexpectedWhitespace",{"range":"211","text":"212"},"Unexpected whitespace before property querySelector.",{"range":"213","text":"212"},{"range":"214","text":"212"},{"range":"215","text":"212"},{"range":"216","text":"212"},{"range":"217","text":"212"},{"range":"218","text":"212"},{"range":"219","text":"212"},"React Hook useEffect has missing dependencies: 'NewTest', 'dSex', 'match.params.gender', and 'match.params.mbti'. Either include them or remove the dependency array.",["220"],"'details' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'match.params.gender' and 'match.params.mbti'. Either include them or remove the dependency array.",["221"],"React Hook useEffect has missing dependencies: 'moreInputData.gender' and 'moreInputData.my_type'. Either include them or remove the dependency array.",["222"],{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},[749,751],".",[705,707],[870,872],[820,822],[981,983],[937,939],[1084,1086],[1042,1044],{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [NewTest, dSex, genderTest.test]",{"range":"233","text":"234"},"Update the dependencies array to be: [genderTest]",{"range":"235","text":"236"},"Update the dependencies array to be: [NewTest, dSex, match.params.gender, match.params.mbti]",{"range":"237","text":"238"},"Update the dependencies array to be: [match.params.gender, match.params.mbti]",{"range":"239","text":"240"},"Update the dependencies array to be: [moreInputData.gender, moreInputData.my_type]",{"range":"241","text":"242"},[1622,1624],"[NewTest, dSex, genderTest.test]",[1347,1349],"[genderTest]",[2248,2250],"[NewTest, dSex, match.params.gender, match.params.mbti]",[2620,2622],"[match.params.gender, match.params.mbti]",[2908,2910],"[moreInputData.gender, moreInputData.my_type]"]